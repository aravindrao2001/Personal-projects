# -*- coding: utf-8 -*-
"""aravindrao_assignment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RbiUhEqCniWdU7hRJhlKmmQ4AztofuKy
"""

import pandas as pd
import numpy as np

visitor_park = pd.read_csv("july4_snapshot.csv")

#1: Exploratory Data Analysis

#A:
visitor_park.head()

"""There are 5 rows of data seen from the head function"""

#Looking at Shape Attribute with .shape

visitor_park.shape

"""There are 5216 columns and 19 rows"""

#D:
visitor_park.info()

"""Gender , age and payment_method are categorical data and other values from 11-18 would be numeric"""

#E = Rounding of values to 2 decimals
visitor_park.round({"merch_spend":2})

#F:
visitor_park.isna().sum()

"""Total of 1145 values are missing"""

#F(a):
visitor_park.isna().sum().sum() * 100 / len(visitor_park)

#F(b):
visitor_park.isna().sum() * 100 / len(visitor_park)

#F(c):
import missingno as msno
msno.matrix(visitor_park)

#F(d):
msno.bar(visitor_park)

#F(e):
visitor_park[visitor_park["state"].isna()]

#G(a):
visitor_park["age"] = np.where(visitor_park["age"] < 15, 15, visitor_park["age"])
visitor_park['age'] = visitor_park['age'].where(visitor_park['age']<15,15)
print(visitor_park)

#H(a):
visitor_park[visitor_park["stay_four"]==1]
count = (visitor_park["stay_four"] == 1).sum()
total = len(visitor_park["stay_four"])
percentage = count / total * 100
print(percentage)

#H(b):
visitor_park_usa = visitor_park[visitor_park["country"] == "USA"]
count = (visitor_park_usa["stay_four"] == 1).sum()
total = len(visitor_park_usa["stay_four"])
percentage_usa = count / total * 100
print(percentage_usa)

"""domestic visitors who stayed more than 4 years"""

#H(b):
park_other = visitor_park[visitor_park["country"] != "USA"]
count = (park_other["stay_four"] == 1).sum()
total = len(park_other["stay_four"])
percentage_other = count / total * 100
print(percentage_other)

"""Percentage of international visitors stayed more than 4 years"""

#I(a):
park_visitor = visitor_park.drop(columns=["domestic"])
park_visitor.head()

"""Column country already gives us the information regarding domestic and international visitors information"""

#J(a):
visitor_park = visitor_park.rename(columns={"maine_res" : "main_per"})
visitor_park.head(20)

#2: Data Visualization

#K:
import seaborn as sns
sns.boxplot(x = "main_per", y = "merch_spend", data = visitor_park);

#K(a):

#L:
ride_names = visitor_park[["sky_chair", "ferris_wheel", "lobster_claw", "lobster_junior"]]
sns.barplot(x = ride_names.columns, y = ride_names.sum(), palette='husl');

#M:
import matplotlib.pyplot as plt
plt.hist(visitor_park["age"], color = "lightcoral", edgecolor = "black");



#M(b):
plt.hist(visitor_park["age"], bins = 20, color = "lightcoral", edgecolor = "black")
plt.xlabel('Age')
plt.ylabel('Count')
plt.title('Age Distribution');

plt.hist(visitor_park["age"], bins = 40, color = "lightcoral", edgecolor = "black")
plt.xlabel('Age')
plt.ylabel('Count')
plt.title('Age Distribution');

"""increasing the number of makes the data more concentrated and normally distributed"""

#M(d):
g = sns.FacetGrid(visitor_park, col = "lobster_junior", height = 7, aspect = 1.5)
g.map(sns.histplot, "age", kde = False)
g.set_axis_labels("Age", "Frequency")
g.fig.suptitle("Age Distribution of Visitors Who Went on the Ride vs. Those Who Did Not");

"""For me it does because both the data have different frequency, especially the ones who went were 35 years and shows the maximum frewuncy compared to ones who didnt . the ones who didnt have a much higher frequency"""

#N:
country_visitor_sum = visitor_park.groupby(["country"])["visitor"].count()
country_visitor_sum = country_visitor_sum[country_visitor_sum.index != "USA"]
print(country_visitor_sum)
country_visitor_sum = country_visitor_sum.sort_values(ascending = False)
country_visitor_sum_df = country_visitor_sum.to_frame()
print(country_visitor_sum_df)
sns.countplot(x=country_visitor_sum_df.index, data= country_visitor_sum, order= country_visitor_sum.value_counts().index)
plt.xlabel("Country")
plt.ylabel("Visitor Count")
plt.title("Visitor Count by Country");

"""This data shows the number of visitors for the certain international visitor and the visitor_count for the data. South korea has the most visitors compared to other countries."""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the data into a DataFrame
df = pd.read_csv('july4_snapshot.csv') # replace with your file name

# Filter the data to only include guests who paid with cash
cash_df = df[df['payment_method'] == 1]



# Group the data by country and calculate the proportion of guests who paid with cash
country_proportions = cash_df.groupby('country').size() / len(cash_df)*100



# Sort the countries in descending order of proportion of guests who paid with cash
country_proportions = country_proportions.sort_values(ascending=False)

# Create a bar plot using seaborn
sns.set_style("whitegrid")
plt.figure(figsize=(10, 6))
sns.barplot(x=country_proportions.index, y=country_proportions.values)
plt.title('Proportion of Guests Who Paid with Cash by Country')
plt.xlabel('Country')
plt.ylabel('Proportion of Guests Who Paid with Cash in percentage')
plt.show()

!pip install nbconvert

!jupyter nbconvert -- to html Aravindrao_assignment1.ipynb

"""The data shows that there are a lot USA visitors in general when comapred to other countries . USA visitors have paid around 80 percent in cash compared to other country visitors .

Part III: Wildcard: Metrics and “Quantified Self”

I chose to keep track of my daily steps for three days in a row as both a researcher and a subject. I measured and kept track of my daily step totals using the health app on my iphone. According to the results, I walked 2,900 steps on the first day, 3,8456 steps on the second, and 5,198 steps on the third.

My daily physical activity varied substantially from day to day as I discovered by keeping track of my steps. Due to doing errands and finishing home duties, the second day saw a marked increase in the number of steps I took compared to the previous two. I became more aware of my physical activity as a result of seeing the numbers in front of me, and I was inspired to exercise more on the third day. I chose to use the stairs rather than the elevator when I went for a walk in the park. Also, I discovered that keeping track of my steps helped me become more conscious of my daily routine and ways to include more exercise.

No one nearby responded to me tracking my steps throughout the course of the three days. The outcomes, though, were significant to me and gave me a chance to consider my routines. I'd definitely think about continuing this experiment for a while, maybe for a week or a month, to gain a better grasp of my daily physical activity patterns. Overall, this experiment served as a great reminder to emphasize exercise in my daily routine and to keep active.
"""